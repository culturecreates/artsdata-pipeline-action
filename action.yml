name: 'Custom Artsdata Pipeline Action'
description: 'A custom action for the Artsdata pipeline'

inputs:
  mode: 
    description: 'Mode of the action(fetch/push/fetch-push)'
    required: true
    default: 'push'
  page-url:
    description: 'URLs of the page to crawl'
  entity-identifier:
    description: 'Identifiers of the entity to fetch'
  downloadFile:
    description: 'Name of the file to download with extension'
  downloadUrl:
    description: 'URL of the file to download'
  is-paginated:
    description: 'Whether the page is paginated'
    default: 'false'
  headless:
    description: 'Whether to run in headless mode'
    default: 'false'
  artifact:
    description: 'Name of the artifact'
  token:
    description: 'GitHub token'
  publisher:
    description: 'URI of the publisher'
  comment:
    description: 'Comment'
  group:
    description: 'Group of artifacts/versions. Typically the name of the tool creating the artifact. Use unreserved characters.'
  version:
    description: 'Version of the artifact. Usually a date. For example: 2020-10-23. Use unreserved characters.'
  report-callback-url:
    description: 'URL to send back the data validation report asynchronously using POST "Content-Type: application/json"'
  shacl:
    description: 'URL to the SHACL file'
  fetch-urls-headlessly:
    description: 'Set as true to fetch the entity URLs headlessly'
  offset:
    description: 'Offset for paginated pages'
  custom-user-agent:
    description: 'Custom user agent string'
  custom-databus-url:
    description: 'Custom Databus URL'
    default: 'http://api.artsdata.ca/databus/'
  xpath-config:
    description: 'XPath configuration as a JSON string'

runs: 
  using: 'composite'
  steps:

    - name: Run
      run: |

        cat <<EOF > config.yml
          mode: ${{ inputs.mode }}
          page_url: ${{ inputs.page-url }}
          entity_identifier: ${{ inputs.entity-identifier }}
          is_paginated: ${{ inputs.is-paginated }}
          headless: ${{ inputs.headless }}
          fetch_urls_headlessly: ${{ inputs.fetch-urls-headlessly }}
          offset: ${{ inputs.offset || '1' }}
          custom_user_agent: ${{ inputs.custom-user-agent || ''}}
          callback_url: ${{ inputs.report-callback-url || '' }}
          workflow_id: ${{ github.workflow }}
          actor: ${{ github.actor }}
          token: ${{ inputs.token }}
          repository: ${{ github.repository }}
          artifact: ${{ inputs.artifact }}
          publisher: ${{ inputs.publisher }}
          reference: ${{ github.ref }}
          version: ${{ inputs.version }}
          comment: ${{ inputs.comment || format('https://github.com/{0}/blob/{1}/{2}', github.repository, github.ref_name, github.event.workflow) }}
          group: ${{ inputs.group }}
          download_file: ${{ inputs.downloadFile }}
          download_url: ${{ inputs.downloadUrl }}
          shacl: ${{ inputs.shacl }}
          databus: ${{ inputs.custom-databus-url }}
          xpath_config: | 
            ${{ inputs.xpath-config }}
        EOF

        mkdir -p output

        docker pull ghcr.io/culturecreates/artsdata-pipeline-action/artsdata-rdf-fetcher:v3.4.1
        docker run --shm-size=1g \
          -v $(pwd)/config.yml:/usr/src/app/config.yml:ro \
          -v $(pwd)/output:/usr/src/app/output \
          ghcr.io/culturecreates/artsdata-pipeline-action/artsdata-rdf-fetcher:v3.4.1\
          config.yml

      shell: bash
